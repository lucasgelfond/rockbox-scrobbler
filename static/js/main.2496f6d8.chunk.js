(this["webpackJsonprockbox-scrobbler"]=this["webpackJsonprockbox-scrobbler"]||[]).push([[0],{18:function(e,t,n){},21:function(e,t,n){"use strict";n.r(t);var r=n(0),c=n.n(r),i=n(8),o=n.n(i),l=(n(18),n(9)),s=n(10),a=n(6),b=n(13),h=n(12),u=n(11),j=n.n(u),d=n(23),x=n(24),v=n(25),g=n(26),O=(n(19),n(1)),p=function(e){Object(b.a)(n,e);var t=Object(h.a)(n);function n(e){var r;return Object(l.a)(this,n),(r=t.call(this,e)).state={input:"",output:""},r.handleChange=r.handleChange.bind(Object(a.a)(r)),r.convertText=r.convertText.bind(Object(a.a)(r)),r.convertSong=r.convertSong.bind(Object(a.a)(r)),r.convertTime=r.convertTime.bind(Object(a.a)(r)),r}return Object(s.a)(n,[{key:"handleChange",value:function(e){this.setState({input:e.target.value})}},{key:"convertTime",value:function(e){var t=new Date(1e3*e);return j()(t,"yyyy-mm-dd hh:mm:ss")}},{key:"convertSong",value:function(e){var t=e.split(/\t/g);return"S"===t[5]?"":'"'+t[0]+'"'+", "+('"'+t[2]+'"')+", "+('"'+t[1]+'"')+", "+('"'+this.convertTime(t[6])+'"')+', "" , '+('"'+t[4]+'"')}},{key:"convertText",value:function(){var e,t=this.state.input.split(/\n/g),n="";for(e=0;e<t.length;e++){""!==this.convertSong(String(t[e]))&&(n=n+"\n"+this.convertSong(String(t[e])))}this.setState({output:n})}},{key:"render",value:function(){return Object(O.jsx)("div",{children:Object(O.jsx)(d.a,{children:Object(O.jsx)(x.a,{children:Object(O.jsxs)(v.a,{children:[Object(O.jsx)("br",{}),Object(O.jsx)("p",{children:"Hello, I built this for my own purposes + wanted to get it up quickly so it's ugly/low functionality. Ideas for the future:"}),Object(O.jsxs)("ul",{children:[Object(O.jsx)("li",{children:"redo styling/make everything look pretty / more usable "}),Object(O.jsx)("li",{children:"allow it to accept full .scrobbler.log / make it less finicky with newline and where it begins"}),Object(O.jsx)("li",{children:"direct last.fm API integration / no reliance on universal scrobbler "})]}),Object(O.jsxs)("p",{children:["Please ",Object(O.jsx)("a",{href:"mailto:lucas_gelfond@brown.edu",children:"email me"})," or add an issue/pull request the ",Object(O.jsx)("a",{href:"https://github.com/lucasgelfond/react-rockbox-scrobbler",children:"repo"})," if you have notes"]}),Object(O.jsx)("p",{children:'Instructions: Copy/paste the text below the #CLIENT line in .scrobbler.log; do not include the newline at the end of the file in your selection. Paste the output into the "Scrobble Manually in Bulk" box on UniversalScrobbler.'}),Object(O.jsx)("h1",{children:"Text inputted from .scrobbler.log"}),Object(O.jsx)("textarea",{onChange:this.handleChange}),Object(O.jsx)("br",{}),Object(O.jsx)(g.a,{variant:"primary",size:"sm",onClick:this.convertText,children:"Convert to Universal Scrobbler text"}),Object(O.jsx)("br",{}),Object(O.jsx)("br",{}),Object(O.jsx)("h1",{children:"Text for the Universal Scrobbler"}),Object(O.jsx)("pre",{children:this.state.output})]})})})})}}]),n}(r.Component),f=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,27)).then((function(t){var n=t.getCLS,r=t.getFID,c=t.getFCP,i=t.getLCP,o=t.getTTFB;n(e),r(e),c(e),i(e),o(e)}))};o.a.render(Object(O.jsx)(c.a.StrictMode,{children:Object(O.jsx)(p,{})}),document.getElementById("root")),f()}},[[21,1,2]]]);
//# sourceMappingURL=main.2496f6d8.chunk.js.map